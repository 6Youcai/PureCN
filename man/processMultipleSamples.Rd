% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/processMultipleSamples.R
\name{processMultipleSamples}
\alias{processMultipleSamples}
\title{Multi sample normalization and segmentation}
\usage{
processMultipleSamples(tumor.coverage.files, sampleids, normalDB,
  num.eigen = 20, genome, plot.cnv = TRUE, w = NULL,
  interval.weight.file = NULL, max.segments = NULL, chr.hash = NULL,
  centromeres = NULL, ...)
}
\arguments{
\item{tumor.coverage.files}{Coverage data for tumor samples.}

\item{sampleids}{Sample ids, used in output files.}

\item{normalDB}{Database of normal samples, created with
\code{\link{createNormalDatabase}}.}

\item{num.eigen}{Number of eigen vectors used.}

\item{genome}{Genome version, for example hg19. See \code{readVcf}.}

\item{plot.cnv}{Segmentation plots.}

\item{w}{Weight of samples. Can be used to downweight poor quality samples.
If \code{NULL}, sets to inverse of median on-target duplication rate if
available, otherwise does not do any weighting.}

\item{interval.weight.file}{Can be used to assign weights to intervals.}

\item{max.segments}{If not \code{NULL}, try a higher \code{undo.SD}
parameter if number of segments exceeds the threshold.}

\item{chr.hash}{Mapping of non-numerical chromsome names to numerical names
(e.g. chr1 to 1, chr2 to 2, etc.). If \code{NULL}, assume chromsomes are
properly ordered.}

\item{centromeres}{A \code{GRanges} object with centromere positions.}

\item{...}{Arguments passed to the segmentation function.}
}
\value{
\code{data.frame} containing the segmentation.
}
\description{
This function performs normalization and segmentation when multiple 
for the same patient are available.
}
\examples{

normal.coverage.file <- system.file("extdata", "example_normal_tiny.txt", 
    package="PureCN")
tumor.coverage.file <- system.file("extdata", "example_tumor_tiny.txt", 
    package="PureCN")
vcf.file <- system.file("extdata", "example.vcf.gz", 
    package="PureCN")
interval.file <- system.file("extdata", "example_intervals_tiny.txt", 
    package="PureCN")

# The max.candidate.solutions, max.ploidy and test.purity parameters are set to
# non-default values to speed-up this example.  This is not a good idea for real
# samples.
ret <-runAbsoluteCN(normal.coverage.file=normal.coverage.file, 
    tumor.coverage.file=tumor.coverage.file, vcf.file=vcf.file, genome="hg19", 
    sampleid="Sample1", interval.file=interval.file, 
    max.candidate.solutions=1, max.ploidy=4, test.purity=seq(0.3,0.7,by=0.05), 
    fun.segmentation=segmentationCBS, args.segmentation=list(alpha=0.001))

}
\references{
Olshen, A. B., Venkatraman, E. S., Lucito, R., Wigler, M. 
(2004). Circular binary segmentation for the analysis of array-based DNA 
copy number data. Biostatistics 5: 557-572.

Venkatraman, E. S., Olshen, A. B. (2007). A faster circular binary 
segmentation algorithm for the analysis of array CGH data. Bioinformatics 
23: 657-63.
}
\seealso{
\code{\link{runAbsoluteCN}}
}
\author{
Markus Riester
}
